stages:
  - build
  - deploy
  - notify

variables:
  DOCKER_USERNAME: $DOCKER_USERNAME
  DOCKER_PASSWORD: $DOCKER_PASSWORD
  KUBECONFIG_DATA: $KUBECONFIG_DATA
  TELEGRAM_TOKEN_ID: $TELEGRAM_TOKEN_ID
  TELEGRAM_CHAT_ID: $TELEGRAM_CHAT_ID

build:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
  script:
    - docker build -t $DOCKER_USERNAME/chat-api-gateway:latest ./api-gateway
    - docker push $DOCKER_USERNAME/chat-api-gateway:latest
    - docker build -t $DOCKER_USERNAME/chat-socket-service:latest ./socket-service
    - docker push $DOCKER_USERNAME/chat-socket-service:latest
    - docker build -t $DOCKER_USERNAME/chat-notifications-service:latest ./notifications-service
    - docker push $DOCKER_USERNAME/chat-notifications-service:latest
  only:
    - main

deploy:
  stage: deploy
  image: bitnami/kubectl:latest
  before_script:
    # - mkdir -p ~/.kube
    # - echo $KUBECONFIG_DATA | base64 -d > ~/.kube/config
    # - kubectl config set-context --current --namespace=ecom-namespace
  script:
    # - kubectl apply -f ./k8s/api-gateway-deployment.yaml
    # - kubectl apply -f ./k8s/socket-service-deployment.yaml
    # - kubectl apply -f ./k8s/notifications-service-deployment.yaml
  only:
    - main

notify:
  stage: notify
  image: alpine:latest
  script:
    - apk add --no-cache curl
    - 'curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_TOKEN_ID}/sendMessage" -d chat_id="${TELEGRAM_CHAT_ID}" -d parse_mode="HTML" -d text="<b>âœ… Deployment Successful!</b>%0ARepository: ${CI_PROJECT_PATH}.%0ABranch: ${CI_COMMIT_REF_NAME}.%0A<a href='${CI_PROJECT_URL}/-/jobs/${CI_JOB_ID}'>View Details</a>"'
  only:
    - main
