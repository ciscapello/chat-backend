stages:
  - build
  # - deploy

variables:
  DOCKER_USERNAME: $DOCKER_USERNAME
  DOCKER_PASSWORD: $DOCKER_PASSWORD
  KUBECONFIG_DATA: $KUBECONFIG_DATA
  TELEGRAM_TOKEN_ID: $TELEGRAM_TOKEN_ID
  TELEGRAM_CHAT_ID: $TELEGRAM_CHAT_ID

build:
  image: docker
  stage: build
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/chat-backend/api-gateway:latest .
    - docker push $CI_REGISTRY/chat-backend/api-gateway:latest
    - docker build -t $CI_REGISTRY/chat-backend/notifications-service:latest .
    - docker push $CI_REGISTRY/chat-backend/notifications-service:latest
    - docker build -t $CI_REGISTRY/chat-backend/socket-service:latest .
    - docker push $CI_REGISTRY/chat-backend/socket-service:latest
    - echo "image built"
# deploy:
#   stage: deploy
#   image: lachlanevenson/k8s-kubectl:latest
#   before_script:
#     - mkdir -p ~/.kube
#     - echo $KUBECONFIG_DATA | base64 -d > ~/.kube/config
#     - kubectl config set-context --current --namespace=ecom-namespace
#   script:
#     - kubectl apply -f ./k8s/api-gateway-deployment.yaml
#     - kubectl apply -f ./k8s/socket-service-deployment.yaml
#     - kubectl apply -f ./k8s/notifications-service-deployment.yaml
#   only:
#     - main
